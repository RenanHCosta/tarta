package components

import (
	"fmt"
	"strings"
)

type CarouselItem struct {
	Image       string
	Title       string
	Description string
}

func getMobileUrl(imageURL string) string {
	lastIndex := strings.LastIndex(imageURL, ".")
	if lastIndex == -1 {
		return imageURL
	}
	baseURL := imageURL[:lastIndex]
	return baseURL + "_xs.webp"
}

templ renderItem(item CarouselItem, index int, imgLoading string) {
	<div id={ fmt.Sprintf("slide%d", index) } class="hero-carousel-item hero carousel-item w-full relative">
		<picture class="w-full">
			<source srcset={ item.Image } media="(min-width: 768px)"/>
			<source srcset={ getMobileUrl(item.Image) } media="(max-width: 767px)"/>
			<img width="1900" height="650" class="w-full" src={ item.Image } alt={ item.Title } loading={ imgLoading }/>
		</picture>
		<div class="hero-overlay bg-opacity-60"></div>
		<div class="hero-content text-center text-neutral-content">
			<div class="max-w-md">
				<h1 class="mb-5 text-5xl font-bold">{ item.Title }</h1>
				<p class="mb-5">{ item.Description }</p>
			</div>
		</div>
		<div class="absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2">
			<a href={ templ.URL(fmt.Sprintf("#slide%d", index-1)) } class="btn btn-circle">❮</a>
			<a href={ templ.URL(fmt.Sprintf("#slide%d", index+1)) } class="btn btn-circle">❯</a>
		</div>
	</div>
}

templ Carousel(items []CarouselItem) {
	<div class="carousel w-full">
		for index, item := range items {
			if (index == 0) {
				@renderItem(item, index, "eager")
			} else {
				@renderItem(item, index, "lazy")
			}
		}
	</div>
}
